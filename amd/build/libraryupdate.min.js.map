{"version":3,"file":"libraryupdate.min.js","sources":["../src/libraryupdate.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Check for updates for Nolej modules in progress.\n *\n * @module      local_nolej\n * @author      Vincenzo Padula <vincenzo@oc-group.eu>\n * @copyright   2024 OC Open Consulting SB Srl\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/ajax', 'core/notification'], function($, Ajax, Notification) {\n    var request = {\n        methodname: 'local_nolej_get_library_updates',\n        args: {\n            contextid: M.cfg.contextid\n        }\n    };\n\n    var requestupdates = function() {\n        Ajax.call([request])[0].done(function(data) {\n            for (let i = 0, len = data.updates.length; i < len; i++) {\n\n                // Show notification.\n                Notification.addNotification({\n                    message: data.updates[i].message,\n                    type: data.updates[i].success ? 'success' : 'error'\n                });\n\n                // Update table row.\n                let rowid = '#local_nolej_module_' + data.updates[i].id;\n                $(rowid + ' .local_nolej_title').text(data.updates[i].title);\n                $(rowid + ' .local_nolej_status').text(data.updates[i].status);\n                $(rowid + ' .local_nolej_status_icon i').attr(\n                    'class',\n                    'fa fa-exclamation ' + (data.updates[i].success ? 'text-success' : 'text-danger')\n                );\n                $(rowid + ' .local_nolej_lastupdate').text(data.updates[i].lastupdate);\n            }\n        }).fail(Notification.exception);\n    };\n\n    return {\n        init: function(interval) {\n            requestupdates();\n            setInterval(requestupdates, interval);\n        }\n    };\n});\n"],"names":["define","$","Ajax","Notification","request","methodname","args","contextid","M","cfg","requestupdates","call","done","data","i","len","updates","length","addNotification","message","type","success","rowid","id","text","title","status","attr","lastupdate","fail","exception","init","interval","setInterval"],"mappings":";;;;;;;;AAuBAA,OAAO,4BAAA,CAAC,SAAU,YAAa,sBAAsB,SAASC,EAAGC,KAAMC,cACnE,IAAIC,QAAU,CACVC,WAAY,kCACZC,KAAM,CACFC,UAAWC,EAAEC,IAAIF,YAIrBG,eAAiB,WACjBR,KAAKS,KAAK,CAACP,UAAU,GAAGQ,MAAK,SAASC,MAClC,IAAK,IAAIC,EAAI,EAAGC,IAAMF,KAAKG,QAAQC,OAAQH,EAAIC,IAAKD,IAAK,CAGrDX,aAAae,gBAAgB,CACzBC,QAASN,KAAKG,QAAQF,GAAGK,QACzBC,KAAMP,KAAKG,QAAQF,GAAGO,QAAU,UAAY,UAIhD,IAAIC,MAAQ,uBAAyBT,KAAKG,QAAQF,GAAGS,GACrDtB,EAAEqB,MAAQ,uBAAuBE,KAAKX,KAAKG,QAAQF,GAAGW,OACtDxB,EAAEqB,MAAQ,wBAAwBE,KAAKX,KAAKG,QAAQF,GAAGY,QACvDzB,EAAEqB,MAAQ,+BAA+BK,KACrC,QACA,sBAAwBd,KAAKG,QAAQF,GAAGO,QAAU,eAAiB,gBAEvEpB,EAAEqB,MAAQ,4BAA4BE,KAAKX,KAAKG,QAAQF,GAAGc,WAC/D,CACH,IAAEC,KAAK1B,aAAa2B,YAGzB,MAAO,CACHC,KAAM,SAASC,UACXtB,iBACAuB,YAAYvB,eAAgBsB,SAChC,EAER"}